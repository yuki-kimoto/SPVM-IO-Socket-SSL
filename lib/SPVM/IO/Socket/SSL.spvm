# Copyright (c) 2024 Yuki Kimoto
# MIT License

class IO::Socket::SSL extends IO::Socket::IP {
  version "0.001";
  
  use Net::SSLeay;
  
  has ssl : Net::SSLeay;
  
  # Class Methods
  static method new : IO::Socket::SSL ($options : object[] = undef) {
    
    my $self = new IO::Socket::SSL;
    
    $self->init($options);
    
    $self->configure;
    
    return $self;
  }
  
  # Instance Methods
  protected method option_names : string[] () {
    
    my $option_names = Array->merge_string(
      $self->SUPER::option_names,
      new string [0],
    );
    
    return $option_names;
  }
  
  protected method init : void ($options : object[] = undef) {
    
  }
  
  protected method configure : void () {
    
  }
  
  method close : void () {
    
    $self->stop_SSL;
    
    $self->SUPER::close;
    
  }
  
  protected method stop_SSL : void () {
    
    my $ssl = $self->{ssl};
    
    my $shutdown_ret = $ssl->shutdown;
    
    if ($shutdown_ret == 0) {
      while (1) {
        my $recv_buffer = (mutable string)new_string_len 100;
        my $read_length = $ssl->read($recv_buffer);
        if ($read_length <= 0) {
          last;
        }
      }
    }
    
  }
}

